
require('./lib')

describe('properties', function() {

    it('invalid', function() {
        var layer = createLayer("Hej")
        var properties = Properties.new(layer)
        assert.equal(properties.count(), 0)
        var layer = createLayer("Hej:hej")
        var properties = Properties.new(layer)
        assert.equal(properties.count(), 0)
        var layer = createLayer("Hej [x:y]")
        var properties = Properties.new(layer)
        assert.equal(properties.count(), 0)
    })

    it('one valid', function() {
        var layer = createLayer("1")
        var properties = Properties.new(layer)
        assert.equal(properties.count(), 1)
        assert.equal(properties.objectAtIndex(0).isValid(), true)
        assert.equal(properties.objectAtIndex(0).property, "padding")
        var layer = createLayer("Hej:w100")
        var properties = Properties.new(layer)
        assert.equal(properties.count(), 1)
        assert.equal(properties.objectAtIndex(0).isValid(), true)
        assert.equal(properties.objectAtIndex(0).property, "width")
        assert.equal(properties.objectAtIndex(0).value, 100)
        var layer = createLayer("Hej [w100]")
        var properties = Properties.new(layer)
        assert.equal(properties.count(), 1)
        assert.equal(properties.objectAtIndex(0).isValid(), true)
        assert.equal(properties.objectAtIndex(0).property, "width")
        assert.equal(properties.objectAtIndex(0).value, 100)
    })

    it('two valid', function() {
        var layer = createLayer("w100:h100")
        var properties = Properties.new(layer)
        assert.equal(properties.count(), 2)
        assert.equal(properties.objectAtIndex(0).isValid(), true)
        assert.equal(properties.objectAtIndex(0).property, "width")
        assert.equal(properties.objectAtIndex(1).isValid(), true)
        assert.equal(properties.objectAtIndex(1).property, "height")
        var layer = createLayer("1:2:w100:3:4")
        var properties = Properties.new(layer)
        assert.equal(properties.count(), 2)
        assert.equal(properties.objectAtIndex(0).isValid(), true)
        assert.equal(properties.objectAtIndex(0).property, "width")
        assert.equal(properties.objectAtIndex(0).value, 100)
        assert.equal(properties.objectAtIndex(1).isValid(), true)
        assert.equal(properties.objectAtIndex(1).property, "padding")
        assert.equal(properties.objectAtIndex(1).value._top, 1)
        assert.equal(properties.objectAtIndex(1).value._right, 2)
        assert.equal(properties.objectAtIndex(1).value._bottom, 3)
        assert.equal(properties.objectAtIndex(1).value._left, 4)
    })

    it('padding', function() {
        var layer = createLayer("Layer [1]")
        var properties = Properties.new(layer)
        assert.equal(properties.count(), 1)
        assert.equal(properties.objectAtIndex(0).isValid(), true)
        assert.equal(properties.objectAtIndex(0).property, "padding")
        assert.equal(properties.objectAtIndex(0).value._top, 1)
        assert.equal(properties.objectAtIndex(0).value._right)
        assert.equal(properties.objectAtIndex(0).value._bottom)
        assert.equal(properties.objectAtIndex(0).value._left)
        var layer = createLayer("Layer [1:2]")
        var properties = Properties.new(layer)
        assert.equal(properties.count(), 1)
        assert.equal(properties.objectAtIndex(0).isValid(), true)
        assert.equal(properties.objectAtIndex(0).property, "padding")
        assert.equal(properties.objectAtIndex(0).value._top, 1)
        assert.equal(properties.objectAtIndex(0).value._right, 2)
        assert.equal(properties.objectAtIndex(0).value._bottom)
        assert.equal(properties.objectAtIndex(0).value._left)
        var layer = createLayer("Layer [1:2:3]")
        var properties = Properties.new(layer)
        assert.equal(properties.count(), 1)
        assert.equal(properties.objectAtIndex(0).isValid(), true)
        assert.equal(properties.objectAtIndex(0).property, "padding")
        assert.equal(properties.objectAtIndex(0).value._top, 1)
        assert.equal(properties.objectAtIndex(0).value._right, 2)
        assert.equal(properties.objectAtIndex(0).value._bottom, 3)
        assert.equal(properties.objectAtIndex(0).value._left)
        var layer = createLayer("Layer [1:2:3:4]")
        var properties = Properties.new(layer)
        assert.equal(properties.count(), 1)
        assert.equal(properties.objectAtIndex(0).isValid(), true)
        assert.equal(properties.objectAtIndex(0).property, "padding")
        assert.equal(properties.objectAtIndex(0).value._top, 1)
        assert.equal(properties.objectAtIndex(0).value._right, 2)
        assert.equal(properties.objectAtIndex(0).value._bottom, 3)
        assert.equal(properties.objectAtIndex(0).value._left, 4)
    })

})
